# SYMBOLIC PROBLEM

0:                              

    objective:                  
    
        - Minimize(sum(sum(C_om_tot)))     

    expressions:   
        # aggregate flows
        - Qagg == I_ff @ tran(Q)   #ok
        - Qagg_h == I_ff_h @ tran(Qh) #ok
        
        # product supply = product demand
        - Qagg_fy - Y_fy - u_fy @ tran(X) == 0 #ok
        - Qagg_h - Yh - uh_tot == 0 #ok

        # technology activity = product demand
        - tran(Xy) - d @ tran(Qy) == 0 #ok
        - Xh - Qh @ tran(d_hh) == 0  #ok 

        # total hourly production = annual production
        - X_th_y - mult((sum_vect_h @ Xh), 365) == 0 #ok
        - Q_fh_y - mult(sum_vect_h @ Qh, periods) == 0  #ok
        - Q_fh_y - mult(sum_vect_h @ Qh, periods) == 0  #ok
        - Qagg_fh_y - mult(sum_vect_h @ tran(Qagg_h), periods) == 0  #ok
        
        #calculate hourly demand
        - Yh == mult(Y_fh, mult(dp_Y, 1/periods))
        - uh_tot_f == sum_vect_th @ uh_th  + sum_vect_ty @ uh_ty
        - tran(uh_ty) == mult(X_ty, mult(u_hy, mult(tran(dp_int), 1/periods))) 
        - tran(uh_th_t) == mult(Xh_t, u_hh)

        # #costs
        - C_om_tot == mult(X, c_om) 

        # non-negativity of variables
        - X >= 0
        - Q >= 0
        - Xh >= 0
        - Qh >= 0
        - Qagg >= 0
        - Qagg_h >= 0 

        # #production limits

        # - Xmax_h == mult(lf_max_h, c_start_h)
        # - Xmin_h == mult(lf_min_h, c_start_h)
        
        # - X_max_y == mult(lf_max, mult(c_start_y, mult(n_slices, periods)))
        # - X_min_y == mult(lf_min, mult(c_start_y, mult(n_slices, periods)))

        # # #production constraints

        # - X_h <= X_max_h
        # - X_h >= X_min_h

        # - X_y_y <= X_max_y
        # - X_y_y >= X_min_y





